ggplot(aes(x=Trip_Time_Minutes)) +
geom_histogram(binwidth=1000) +
labs(title = "Counts of trip times in minutes for docked bike rides, divided into steps of 1,000")
df_nocoordinates3 %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(x=Trip_Time_Minutes)) +
geom_histogram(binwidth=1000) +
labs(title = "Counts of trip times in minutes for docked bikes, divided into steps of 1,000")
df_nocoordinates3 %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(x=Trip_Time_Minutes)) +
geom_histogram(binwidth=1000) +
labs(title = "Counts of trip times in minutes for docked bikes")
df_nocoordinates3 %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(x=Trip_Time_Minutes)) +
geom_histogram(binwidth=1000) +
labs(title = "Counts of trip times in minutes for docked bikes", x = "Trip times in minute", y = "counts")
df_nocoordinates3 %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(x=Trip_Time_Minutes)) +
geom_histogram(binwidth=1000) +
labs(title = "Counts of trip times in minutes for docked bikes", x = "Trip times in minutes", y = "counts")
df_nocoordinates3 %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(x=Trip_Time_Minutes)) +
geom_histogram(binwidth=1000) +
labs(title = "Counts of trip times in minutes for docked bikes", x = "Trip times in minutes", y = "Occurances")
df_nocoordinates3_dockedhigh %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(x=Trip_Time_Minutes)) +
geom_histogram(binwidth=1000) +
labs(title = "Counts of trip times in minutes for docked bikes", x = "Trip times in minutes", y = "Occurances")
df_nocoordinates3_dockedhigh %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(x=start_station_id)) +
geom_histogram(binwidth=1000) +
labs(title = "Counts of trip times in minutes for docked bikes", x = "Trip times in minutes", y = "Occurances")
df_nocoordinates3_dockedhigh %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(x=start_station_id)) +
geom_histogram(binwidth=1000, stat="count") +
labs(title = "Counts of trip times in minutes for docked bikes", x = "Trip times in minutes", y = "Occurances")
df_nocoordinates3_dockedhigh %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(x=start_station_id)) +
geom_histogram(binwidth=1000, stat="count") +
labs(title = "Counts of trip times in minutes for docked bikes", x = "Trip times in minutes", y = "Occurances") +
coord_flip()
df_nocoordinates3_dockedhigh <- df_nocoordinates3[df_nocoordinates3$Trip_Time_Minutes > 20000, ]
df_nocoordinates3_dockedhigh %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(start_station_id)) +
geom_bar(aes(fill=start_station_id)) +
coord_flip() +
theme_classic()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(janitor)
#library(reshape)#dataframe manipulation
#read all the CSV files of trip data for the past 12 months as dataframes in R
df_202110 <- read_csv("202110-divvy-tripdata.csv")
df_202111 <- read_csv("202111-divvy-tripdata.csv")
df_202112 <- read_csv("202112-divvy-tripdata.csv")
df_202201 <- read_csv("202201-divvy-tripdata.csv")
df_202202 <- read_csv("202202-divvy-tripdata.csv")
df_202203 <- read_csv("202203-divvy-tripdata.csv")
df_202204 <- read_csv("202204-divvy-tripdata.csv")
df_202205 <- read_csv("202205-divvy-tripdata.csv")
df_202206 <- read_csv("202206-divvy-tripdata.csv")
df_202207 <- read_csv("202207-divvy-tripdata.csv")
df_202208 <- read_csv("202208-divvy-tripdata.csv")
df_202209 <- read_csv("202209-divvy-publictripdata.csv")
#append all months into single dataframe
df <- rbind(df_202110, df_202111,df_202112, df_202201, df_202202, df_202203, df_202204, df_202205, df_202206, df_202207, df_202208, df_202209)
head(df)
df_renamed <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual)
skim_without_charts(df_renamed)
df_renamed %>%
group_by(Bike_Type, Rider_Type) %>%
summarise("Start station latitudes" = n_distinct(start_lat), "Start station longitudes" = n_distinct(start_lng), "End station latitudes" = n_distinct(end_lat), "End station longitudes" = n_distinct(end_lng)) %>%
gather(Bike_Type, value, "Start station latitudes", "Start station longitudes", "End station latitudes", "End station longitudes") %>% #unpivots chart
ggplot(mapping = aes(x = Rider_Type, y=value)) +
geom_bar(stat = "identity") +
facet_wrap(~Bike_Type) +
labs(title="Count of unique values of geographical coordinates", x = "", y = "Unique instances")
df_nocoordinates <- df_renamed %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id = 'Missing location ID')) %>%
select(Ride_ID, Bike_Type, start_station_id, end_station_id, started_at, ended_at, Rider_Type)
df_nocoordinates2 <- df_nocoordinates %>%
mutate(Trip_Time_Minutes = (ended_at - started_at)/60) %>%
select(Ride_ID, Bike_Type, start_station_id, end_station_id, Trip_Time_Minutes, Rider_Type)
df_nocoordinates2$Trip_Time_Minutes <- as.numeric(df_nocoordinates2$Trip_Time_Minutes)
#round to nearest minute
df_nocoordinates2$Trip_Time_Minutes <- round(df_nocoordinates2$Trip_Time_Minutes, 0)
glimpse(df_nocoordinates2)
ggplot(data = df_nocoordinates2) +
geom_bar(mapping = aes(x = Rider_Type)) +
facet_wrap(~Bike_Type) +
labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
#percentage of riders using docked bikes
df_nocoordinates2 %>%
summarize(df_nocoordinates2,)
ggplot(data = df_nocoordinates2) +
geom_point(mapping = aes(x = Trip_Time_Minutes, y = Bike_Type)) +
facet_wrap(~Rider_Type) +
labs(title="Total time per ride", x = "Minutes", y = "") +
theme_classic()
paste("There are",sum(df_nocoordinates2$Trip_Time_Minutes < 0),"rows with trip times below 0 minutes.")
#remove observations with values of trip times below 0 minutes
df_nocoordinates3 <- df_nocoordinates2[df_nocoordinates2$Trip_Time_Minutes > 0, ]
glimpse(df_nocoordinates3)
#percentage of riders using docked bikes
df_nocoordinates3 %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_Minutes), n= n()) %>%
mutate(Ride_time_in_years = mean*n/60/24/365) %>%
ggplot(mapping = aes(x = Rider_Type, y = Ride_time_in_years)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Total Ride Time of All Riders", x = "", y = "Years")
df_nocoordinates3 %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(x=Trip_Time_Minutes)) +
geom_histogram(binwidth=1000) +
labs(title = "Counts of trip times in minutes for docked bikes", x = "Trip times in minutes", y = "Occurances")
df_nocoordinates3_dockedhigh <- df_nocoordinates3[df_nocoordinates3$Trip_Time_Minutes > 20000, ]
df_nocoordinates3_dockedhigh %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(start_station_id)) +
geom_bar(aes(fill=start_station_id)) +
coord_flip() +
theme_classic()
df_nocoordinates3_dockedhigh %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(end_station_id)) +
geom_bar(aes(fill=end_station_id)) +
labs(title = "Docked bikes end stations", x = "", y = "") +
coord_flip() +
theme_classic()
df_nocoordinates3 %>%
filter(Bike_Type %in% c("electric bike","classic_bike")) %>%
ggplot(aes(x=Trip_Time_Minutes, y=Bike_Type)) + facet_wrap(~ Trip_Time_Minutes)
ggplot(data = df_nocoordinates3, aes(x = Trip_Time_Minutes)) +
facet_wrap(~Bike_Type) +
geom_point() +
labs(title="Total time per ride", x = "Minutes", y = "")
# https://ggplot2.tidyverse.org/reference/geom_density.html
ggplot(data = df_nocoordinates3, aes(Trip_Time_Minutes, after_stat(count)) +
geom_density(position = "stack")
hotel_summary <-
hotel_bookings %>%
group_by(hotel) %>%
summarise(average_lead_time=mean(lead_time),
min_lead_time=min(lead_time),
max_lead_time=max(lead_time))
length(which(df_nocoordinates2$start_station_id == df_nocoordinates2$end_station_id))
paste("There are", sum(df_nocoordinates3$start_station_id == "Missing location ID"), "mising start location IDs.")
paste("There are", sum(df_nocoordinates3$end_station_id == "Missing location ID"), "missing end location IDs.")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(janitor)
#library(reshape)#dataframe manipulation
#read all the CSV files of trip data for the past 12 months as dataframes in R
df_202110 <- read_csv("202110-divvy-tripdata.csv")
df_202111 <- read_csv("202111-divvy-tripdata.csv")
df_202112 <- read_csv("202112-divvy-tripdata.csv")
df_202201 <- read_csv("202201-divvy-tripdata.csv")
df_202202 <- read_csv("202202-divvy-tripdata.csv")
df_202203 <- read_csv("202203-divvy-tripdata.csv")
df_202204 <- read_csv("202204-divvy-tripdata.csv")
df_202205 <- read_csv("202205-divvy-tripdata.csv")
df_202206 <- read_csv("202206-divvy-tripdata.csv")
df_202207 <- read_csv("202207-divvy-tripdata.csv")
df_202208 <- read_csv("202208-divvy-tripdata.csv")
df_202209 <- read_csv("202209-divvy-publictripdata.csv")
#append all months into single dataframe
df <- rbind(df_202110, df_202111,df_202112, df_202201, df_202202, df_202203, df_202204, df_202205, df_202206, df_202207, df_202208, df_202209)
#remove unused dataframes to free up memory
#rm()
View(df_202110)
?rm()
#read all the CSV files of trip data for the past 12 months as dataframes in R
df_202110 <- read_csv("202110-divvy-tripdata.csv")
df_202111 <- read_csv("202111-divvy-tripdata.csv")
df_202112 <- read_csv("202112-divvy-tripdata.csv")
df_202201 <- read_csv("202201-divvy-tripdata.csv")
df_202202 <- read_csv("202202-divvy-tripdata.csv")
df_202203 <- read_csv("202203-divvy-tripdata.csv")
df_202204 <- read_csv("202204-divvy-tripdata.csv")
df_202205 <- read_csv("202205-divvy-tripdata.csv")
df_202206 <- read_csv("202206-divvy-tripdata.csv")
df_202207 <- read_csv("202207-divvy-tripdata.csv")
df_202208 <- read_csv("202208-divvy-tripdata.csv")
df_202209 <- read_csv("202209-divvy-publictripdata.csv")
#append all months into single dataframe
df <- rbind(df_202110, df_202111,df_202112, df_202201, df_202202, df_202203, df_202204, df_202205, df_202206, df_202207, df_202208, df_202209)
#remove unused dataframes to free up memory
rm(df_202110, df_202111,df_202112, df_202201, df_202202, df_202203, df_202204, df_202205, df_202206, df_202207, df_202208, df_202209)
head(df)
df_renamed <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual)
skim_without_charts(df_renamed)
df_renamed %>%
group_by(Bike_Type, Rider_Type) %>%
summarise("Start station latitudes" = n_distinct(start_lat), "Start station longitudes" = n_distinct(start_lng), "End station latitudes" = n_distinct(end_lat), "End station longitudes" = n_distinct(end_lng)) %>%
gather(Bike_Type, value, "Start station latitudes", "Start station longitudes", "End station latitudes", "End station longitudes") %>% #unpivots chart
ggplot(mapping = aes(x = Rider_Type, y=value)) +
geom_bar(stat = "identity") +
facet_wrap(~Bike_Type) +
labs(title="Count of unique values of geographical coordinates", x = "", y = "Unique instances")
df_nocoordinates <- df_renamed %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id = 'Missing location ID')) %>%
select(Ride_ID, Bike_Type, start_station_id, end_station_id, started_at, ended_at, Rider_Type)
df_nocoordinates2 <- df_nocoordinates %>%
mutate(Trip_Time_Minutes = (ended_at - started_at)/60) %>%
select(Ride_ID, Bike_Type, start_station_id, end_station_id, Trip_Time_Minutes, Rider_Type)
df_nocoordinates2$Trip_Time_Minutes <- as.numeric(df_nocoordinates2$Trip_Time_Minutes)
#round to nearest minute
df_nocoordinates2$Trip_Time_Minutes <- round(df_nocoordinates2$Trip_Time_Minutes, 0)
glimpse(df_nocoordinates2)
ggplot(data = df_nocoordinates2) +
geom_bar(mapping = aes(x = Rider_Type)) +
facet_wrap(~Bike_Type) +
labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
#percentage of riders using docked bikes
df_nocoordinates2 %>%
summarize(df_nocoordinates2,)
ggplot(data = df_nocoordinates2) +
geom_point(mapping = aes(x = Trip_Time_Minutes, y = Bike_Type)) +
facet_wrap(~Rider_Type) +
labs(title="Total time per ride", x = "Minutes", y = "")
df_nocoordinates <- df_renamed %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id = 'Missing location ID')) %>%
select(Ride_ID, Bike_Type, start_station_id, end_station_id, started_at, ended_at, Rider_Type)
skim_without_charts(df_renamed)
skim_without_charts(df_renamed)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(janitor)
#library(reshape)#dataframe manipulation
#read all the CSV files of trip data for the past 12 months as dataframes in R
df_202110 <- read_csv("202110-divvy-tripdata.csv")
df_202111 <- read_csv("202111-divvy-tripdata.csv")
df_202112 <- read_csv("202112-divvy-tripdata.csv")
df_202201 <- read_csv("202201-divvy-tripdata.csv")
df_202202 <- read_csv("202202-divvy-tripdata.csv")
df_202203 <- read_csv("202203-divvy-tripdata.csv")
df_202204 <- read_csv("202204-divvy-tripdata.csv")
df_202205 <- read_csv("202205-divvy-tripdata.csv")
df_202206 <- read_csv("202206-divvy-tripdata.csv")
df_202207 <- read_csv("202207-divvy-tripdata.csv")
df_202208 <- read_csv("202208-divvy-tripdata.csv")
df_202209 <- read_csv("202209-divvy-publictripdata.csv")
#append all months into single dataframe
df <- rbind(df_202110, df_202111,df_202112, df_202201, df_202202, df_202203, df_202204, df_202205, df_202206, df_202207, df_202208, df_202209)
#remove unused dataframes to free up memory
rm(df_202110, df_202111,df_202112, df_202201, df_202202, df_202203, df_202204, df_202205, df_202206, df_202207, df_202208, df_202209)
head(df)
df_renamed <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual)
skim_without_charts(df_renamed)
df_renamed %>%
group_by(Bike_Type, Rider_Type) %>%
summarise("Start station latitudes" = n_distinct(start_lat), "Start station longitudes" = n_distinct(start_lng), "End station latitudes" = n_distinct(end_lat), "End station longitudes" = n_distinct(end_lng)) %>%
gather(Bike_Type, value, "Start station latitudes", "Start station longitudes", "End station latitudes", "End station longitudes") %>% #unpivots chart
ggplot(mapping = aes(x = Rider_Type, y=value)) +
geom_bar(stat = "identity") +
facet_wrap(~Bike_Type) +
labs(title="Count of unique values of geographical coordinates", x = "", y = "Unique instances")
df_nocoordinates <- df_renamed %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id = 'Missing location ID')) %>%
select(Ride_ID, Bike_Type, start_station_id, end_station_id, started_at, ended_at, Rider_Type)
df_nocoordinates2 <- df_nocoordinates %>%
mutate(Trip_Time_Minutes = (ended_at - started_at)/60) %>%
select(Ride_ID, Bike_Type, start_station_id, end_station_id, Trip_Time_Minutes, Rider_Type)
df_nocoordinates2$Trip_Time_Minutes <- as.numeric(df_nocoordinates2$Trip_Time_Minutes)
#round to nearest minute
df_nocoordinates2$Trip_Time_Minutes <- round(df_nocoordinates2$Trip_Time_Minutes, 0)
glimpse(df_nocoordinates2)
ggplot(data = df_nocoordinates2) +
geom_bar(mapping = aes(x = Rider_Type)) +
facet_wrap(~Bike_Type) +
labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
#percentage of riders using docked bikes
df_nocoordinates2 %>%
summarize(df_nocoordinates2,)
ggplot(data = df_nocoordinates2) +
geom_point(mapping = aes(x = Trip_Time_Minutes, y = Bike_Type)) +
facet_wrap(~Rider_Type) +
labs(title="Total time per ride", x = "Minutes", y = "")
paste("There are",sum(df_nocoordinates2$Trip_Time_Minutes < 0),"rows with trip times below 0 minutes.")
#remove observations with values of trip times below 0 minutes
df_nocoordinates3 <- df_nocoordinates2[df_nocoordinates2$Trip_Time_Minutes > 0, ]
glimpse(df_nocoordinates3)
#percentage of riders using docked bikes
df_nocoordinates3 %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_Minutes), n= n()) %>%
mutate(Ride_time_in_years = mean*n/60/24/365) %>%
ggplot(mapping = aes(x = Rider_Type, y = Ride_time_in_years)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Total Ride Time of All Riders", x = "", y = "Years")
df_nocoordinates3 %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(x=Trip_Time_Minutes)) +
geom_histogram(binwidth=1000) +
labs(title = "Counts of trip times in minutes for docked bikes", x = "Trip times in minutes", y = "Occurances")
df_nocoordinates3_dockedhigh <- df_nocoordinates3[df_nocoordinates3$Trip_Time_Minutes > 20000, ]
df_nocoordinates3_dockedhigh %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(start_station_id)) +
geom_bar(aes(fill=start_station_id)) +
coord_flip() +
theme_classic()
df_nocoordinates3_dockedhigh %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(end_station_id)) +
geom_bar(aes(fill=end_station_id)) +
labs(title = "Docked bikes end stations", x = "", y = "") +
coord_flip() +
theme_classic()
df_nocoordinates3 %>%
filter(Bike_Type %in% c("electric bike","classic_bike")) %>%
ggplot(aes(x=Trip_Time_Minutes, y=Bike_Type)) + facet_wrap(~ Trip_Time_Minutes)
# ggplot(data = df_nocoordinates3, aes(x = Trip_Time_Minutes)) +
#   facet_wrap(~Bike_Type) +
#   geom_point() +
#   labs(title="Total time per ride", x = "Minutes", y = "")
# https://ggplot2.tidyverse.org/reference/geom_density.html
# ggplot(data = df_nocoordinates3, aes(Trip_Time_Minutes, after_stat(count)) +
#   geom_density(position = "stack")
length(which(df_nocoordinates2$start_station_id == df_nocoordinates2$end_station_id))
paste("There are", sum(df_nocoordinates3$start_station_id == "Missing location ID"), "mising start location IDs.")
paste("There are", sum(df_nocoordinates3$end_station_id == "Missing location ID"), "missing end location IDs.")
df_nocoordinates2 <- df_nocoordinates %>%
mutate(Trip_Time_Minutes = (ended_at - started_at)/60) %>%
select(Ride_ID, Bike_Type, start_station_id, end_station_id, Trip_Time_Minutes, Rider_Type)
df_nocoordinates2$Trip_Time_Minutes <- as.numeric(df_nocoordinates2$Trip_Time_Minutes)
#round to nearest minute
df_nocoordinates2$Trip_Time_Minutes <- round(df_nocoordinates2$Trip_Time_Minutes, 0)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual)
skim_without_charts(df_renamed)
skim_without_charts(df_1)
df_1 %>%
group_by(Bike_Type, Rider_Type) %>%
summarise("Start station latitudes" = n_distinct(start_lat), "Start station longitudes" = n_distinct(start_lng), "End station latitudes" = n_distinct(end_lat), "End station longitudes" = n_distinct(end_lng)) %>%
gather(Bike_Type, value, "Start station latitudes", "Start station longitudes", "End station latitudes", "End station longitudes") %>% #unpivots chart
ggplot(mapping = aes(x = Rider_Type, y=value)) +
geom_bar(stat = "identity") +
facet_wrap(~Bike_Type) +
labs(title="Count of unique values of geographical coordinates", x = "", y = "Unique instances")
df_2 <- df_1 %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id = 'Missing location ID')) %>%
select(Ride_ID, Bike_Type, start_station_id, end_station_id, started_at, ended_at, Rider_Type)
df_clean <- df_2 %>%
mutate(Trip_Time_Minutes = (ended_at - started_at)/60) %>%
select(Ride_ID, Bike_Type, start_station_id, end_station_id, Trip_Time_Minutes, Rider_Type)
df_nocoordinates2$Trip_Time_Minutes <- as.numeric(df_nocoordinates2$Trip_Time_Minutes)
#round to nearest minute
df_nocoordinates2$Trip_Time_Minutes <- round(df_nocoordinates2$Trip_Time_Minutes, 0)
#remove other dataframes to save memory
rm(df,df_1,df_2)
View(df_renamed)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(janitor)
#library(reshape)#dataframe manipulation
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
head(df)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual)
skim_without_charts(df_1)
df_2 <- df_1 %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id = 'Missing location ID')) %>%
replace_na(list(start_station_id = 'Missing location Name', end_station_id = 'Missing location Name'))
df_2$Trip_Time_Days <- as.Date(df_2$started_at) - as.Date(df_2$ended_at)
skim_without_charts(df_2)
paste(sum(df_2$Trip_Time_Days < 0),"rows with trip times below 0 days have been removed.")
df_clean <- df_2[df_2$Trip_Time_Days > 0, ] #removes values below 0 days
rm(df,df_1,df_2) #removes other dataframes to save memory
ggplot(data = df_clean) +
geom_bar(mapping = aes(x = Rider_Type)) +
facet_wrap(~Bike_Type) +
labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
#percentage of riders using docked bikes
df_clean %>%
summarize(df_clean,)
#percentage of riders using docked bikes
df_nocoordinates3 %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_Days), n= n()) %>%
mutate(Trip_time_in_years = mean*n/365) %>%
ggplot(mapping = aes(x = Rider_Type, y = Trip_time_in_years)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Total Ride Time of All Riders", x = "", y = "Years")
ggplot(data = df_clean) +
geom_bar(mapping = aes(x = Rider_Type)) #+
#facet_wrap(~Bike_Type) +
#labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
ggplot(data = df_clean) +
geom_bar(mapping = aes(x = Bike_Type)) #+
ggplot(data = df_clean) +
geom_bar(mapping = aes(x = Rider_Type)) #+
ggplot(data = df_clean) +
geom_bar(mapping = aes(x = Rider_Type)) +
facet_wrap(~Bike_Type) +
#labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
ggplot(data = df_clean) +
geom_bar(mapping = aes(x = Rider_Type)) +
facet_wrap(~Bike_Type) #+
#labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
ggplot(data = df_clean) +
geom_bar(mapping = aes(x = Rider_Type, mapping = NULL)) +
facet_wrap(~Bike_Type) #+
#labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
ggplot(data = df_clean) +
geom_bar(mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) #+
ggplot() +
geom_bar(df_clean,mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) #+
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type, fill=Bike_Type)) #+
# facet_wrap(~Bike_Type) #+
#labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type, stat='count')) #+
facet_wrap(~Bike_Type) #+
#labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
?geom_bar
View(df_clean)
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual)
df_2 <- df_1 %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id = 'Missing location ID')) %>%
replace_na(list(start_station_id = 'Missing location Name', end_station_id = 'Missing location Name'))
df_2$Trip_Time_Days <- as.Date(df_2$started_at) - as.Date(df_2$ended_at)
skim_without_charts(df_2)
paste(sum(df_2$Trip_Time_Days < 0),"rows with trip times below 0 days have been removed.")
df_clean <- df_2[df_2$Trip_Time_Days >= 0, ] #removes values below 0 days
rm(df,df_1,df_2) #removes other dataframes to save memory
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type)) #+
facet_wrap(~Bike_Type) #+
#labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) #+
#labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
#percentage of riders using docked bikes
df_clean %>%
summarize(df_clean,)
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_Days), n= n()) %>%
mutate(Trip_time_in_years = mean*n/365) %>%
ggplot(mapping = aes(x = Rider_Type, y = Trip_time_in_years)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Total Ride Time of All Riders", x = "", y = "Years")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_Days), n= n()) %>%
mutate(Trip_time_in_years = mean*n) %>%
ggplot(mapping = aes(x = Rider_Type, y = Trip_time_in_years)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Total Ride Time of All Riders", x = "", y = "Years")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_Days), n= n()) %>%
mutate(Trip_time_in_years = mean*n) #%>%
View(df_clean)
# ggplot(mapping = aes(x = Rider_Type, y = Trip_time_in_years)) +
# geom_bar(stat= "identity") +
# facet_wrap(~Bike_Type) +
# labs(title="Total Ride Time of All Riders", x = "", y = "Days")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_Days), n= n()) %>%
mutate(Trip_time_in_years = mean*n) %>%
View()
# ggplot(mapping = aes(x = Rider_Type, y = Trip_time_in_years)) +
# geom_bar(stat= "identity") +
# facet_wrap(~Bike_Type) +
# labs(title="Total Ride Time of All Riders", x = "", y = "Days")
