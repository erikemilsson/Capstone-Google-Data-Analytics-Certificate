ggplot(data = df_clean) +
geom_bar(mapping = aes(x = Rider_Type)) #+
#facet_wrap(~Bike_Type) +
#labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
ggplot(data = df_clean) +
geom_bar(mapping = aes(x = Bike_Type)) #+
ggplot(data = df_clean) +
geom_bar(mapping = aes(x = Rider_Type)) #+
ggplot(data = df_clean) +
geom_bar(mapping = aes(x = Rider_Type)) +
facet_wrap(~Bike_Type) +
#labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
ggplot(data = df_clean) +
geom_bar(mapping = aes(x = Rider_Type)) +
facet_wrap(~Bike_Type) #+
#labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
ggplot(data = df_clean) +
geom_bar(mapping = aes(x = Rider_Type, mapping = NULL)) +
facet_wrap(~Bike_Type) #+
#labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
ggplot(data = df_clean) +
geom_bar(mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) #+
ggplot() +
geom_bar(df_clean,mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) #+
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type, fill=Bike_Type)) #+
# facet_wrap(~Bike_Type) #+
#labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type, stat='count')) #+
facet_wrap(~Bike_Type) #+
#labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
?geom_bar
View(df_clean)
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual)
df_2 <- df_1 %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id = 'Missing location ID')) %>%
replace_na(list(start_station_id = 'Missing location Name', end_station_id = 'Missing location Name'))
df_2$Trip_Time_Days <- as.Date(df_2$started_at) - as.Date(df_2$ended_at)
skim_without_charts(df_2)
paste(sum(df_2$Trip_Time_Days < 0),"rows with trip times below 0 days have been removed.")
df_clean <- df_2[df_2$Trip_Time_Days >= 0, ] #removes values below 0 days
rm(df,df_1,df_2) #removes other dataframes to save memory
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type)) #+
facet_wrap(~Bike_Type) #+
#labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) #+
#labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
#percentage of riders using docked bikes
df_clean %>%
summarize(df_clean,)
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_Days), n= n()) %>%
mutate(Trip_time_in_years = mean*n/365) %>%
ggplot(mapping = aes(x = Rider_Type, y = Trip_time_in_years)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Total Ride Time of All Riders", x = "", y = "Years")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_Days), n= n()) %>%
mutate(Trip_time_in_years = mean*n) %>%
ggplot(mapping = aes(x = Rider_Type, y = Trip_time_in_years)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Total Ride Time of All Riders", x = "", y = "Years")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_Days), n= n()) %>%
mutate(Trip_time_in_years = mean*n) #%>%
View(df_clean)
# ggplot(mapping = aes(x = Rider_Type, y = Trip_time_in_years)) +
# geom_bar(stat= "identity") +
# facet_wrap(~Bike_Type) +
# labs(title="Total Ride Time of All Riders", x = "", y = "Days")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_Days), n= n()) %>%
mutate(Trip_time_in_years = mean*n) %>%
View()
# ggplot(mapping = aes(x = Rider_Type, y = Trip_time_in_years)) +
# geom_bar(stat= "identity") +
# facet_wrap(~Bike_Type) +
# labs(title="Total Ride Time of All Riders", x = "", y = "Days")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(janitor)
#library(reshape)#dataframe manipulation
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
head(df)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual)
skim_without_charts(df_1)
df_2 <- df_1 %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id = 'Missing location ID')) %>%
replace_na(list(start_station_id = 'Missing location Name', end_station_id = 'Missing location Name'))
df_2$Trip_Time_Days <- as.Date(df_2$started_at) - as.Date(df_2$ended_at)
skim_without_charts(df_2)
paste(sum(df_2$Trip_Time_Days < 0),"rows with trip times below 0 days have been removed.")
df_clean <- df_2[df_2$Trip_Time_Days >= 0, ] #removes values below 0 days
rm(df,df_1,df_2) #removes other dataframes to save memory
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) +
labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_Days), n= n()) %>%
mutate(Trip_time_in_years = mean*n) %>%
View()
# ggplot(mapping = aes(x = Rider_Type, y = Trip_time_in_years)) +
# geom_bar(stat= "identity") +
# facet_wrap(~Bike_Type) +
# labs(title="Total Ride Time of All Riders", x = "", y = "Days")
df_nocoordinates3 %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(x=Trip_Time_Days)) +
geom_histogram(binwidth=1000) +
labs(title = "Counts of trip times in minutes for docked bikes", x = "Trip times in minutes", y = "Occurances")
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
clear
erase.screen()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(janitor)
#library(reshape)#dataframe manipulation
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
head(df)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual) %>%
rename(Start_Time = started_at) %>%
rename(End_Time = ended_at)
skim_without_charts(df_1)
df_2 <- df_1 %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id = 'Missing location ID')) %>%
replace_na(list(start_station_id = 'Missing location Name', end_station_id = 'Missing location Name'))
df_2$Trip_Time_Days <- as.Date(df_2$Start_Time) - as.Date(df_2$End_Time)
skim_without_charts(df_2)
?mutate
paste(sum(df_2$Trip_Time_Days < 0),"rows with trip times below 0 days have been removed.")
df_clean <- df_2[df_2$Trip_Time_Days >= 0, ] #removes values below 0 days
rm(df,df_1,df_2) #removes other dataframes to save memory
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) +
labs(title="Bike types used by type of rider", x = "", y = "Count of rides")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_Days), n= n()) %>%
mutate(Trip_time_in_years = mean*n) %>%
View()
# ggplot(mapping = aes(x = Rider_Type, y = Trip_time_in_years)) +
# geom_bar(stat= "identity") +
# facet_wrap(~Bike_Type) +
# labs(title="Total Ride Time of All Riders", x = "", y = "Days")
df_nocoordinates3 %>%
filter(Bike_Type=="docked_bike") %>%
ggplot(aes(x=Trip_Time_Days)) +
geom_histogram(binwidth=1000) +
labs(title = "Counts of trip times in minutes for docked bikes", x = "Trip times in minutes", y = "Occurances")
as.duration((df_2$Trip_Time_Days),"minutes") <- as.Date(df_2$Start_Time) - as.Date(df_2$End_Time)
library(lubridate)
as.duration((df_2$Trip_Time_Days),"minutes") <- as.Date(df_2$Start_Time) - as.Date(df_2$End_Time)
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual) %>%
rename(Start_Time = started_at) %>%
rename(End_Time = ended_at)
df_2 <- df_1 %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id = 'Missing location ID')) %>%
replace_na(list(start_station_id = 'Missing location Name', end_station_id = 'Missing location Name'))
as.duration((df_2$Trip_Time_Days),"minutes") <- as.Date(df_2$Start_Time) - as.Date(df_2$End_Time)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(janitor)
library(lubridate)
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
head(df)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual) %>%
rename(Start_Time = started_at) %>%
rename(End_Time = ended_at)
skim_without_charts(df_1)
df_2 <- df_1 %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id =
'Missing location ID')) %>%
replace_na(list(start_station_id = 'Missing location Name', end_station_id =
'Missing location Name'))
df_2 <-
mutate(df_2, Trip_Day = as_date(Start_Time))
#as.duration((df_2$Trip_Time_Days),"minutes") <-
df_2 <-
mutate(df_2, Trip_Time = seconds_to_period(as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time))) %>%
mutate(df_2, Trip_Time_seconds = as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time)) %>%
select(Ride_ID,Bike_Type,start_station_name,end_station_name,start_station_id,end_station_id,Rider_Type,Trip_Time, Trip_Time_seconds, Trip_Day)
paste(sum(df_2$Trip_Time < 0),"rows with trip times below 0 seconds have been removed.")
df_clean <- df_2[df_2$Trip_Time >= 0, ] #removes rows below 0 seconds
rm(df,df_1,df_2) #removes other dataframes to save memory
head(df_clean)
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) +
labs(title="Annual number of rides", x = "", y = "Rides")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_seconds), n= n()) %>%
ggplot(mapping = aes(x = Rider_Type, y = mean)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Mean ride times", x = "", y = "seconds")
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Time_seconds, color = Bike_Type )) +
geom_density() +
scale_x_continuous(limits=c(0, 10000)) +
labs(title = "Distribution of trip times",
x = "Trip times in seconds", y = "Number of rides") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
length(which(df_nocoordinates2$start_station_id == df_nocoordinates2$end_station_id))
df_clean %>%
filter(
Bike_Type %in%
c('classic_bike','docked_bike','electric_bike')
) %>%
ggplot(aes(x=Trip_Time_seconds, color = Bike_Type )) +
geom_density() +
scale_x_continuous(limits=c(0, 10000)) +
labs(
title = "Distribution of trip times",
x = "Trip times in seconds",
y = "Number of rides"
) +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
ggplot(aes(x=Trip_Day)) +
geom_density() +
```
df_clean %>%
ggplot(aes(x=Trip_Day)) +
geom_density()
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density()
df_clean %>%
filter(Rider_Type %in% c('caual','member')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density()
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density() +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
```{r}
df_clean %>%
filter(Rider_Type %in% c('caual','member')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density() +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density()
df_clean %>%
filter(Rider_Type %in% c('caual','member')) %>%
ggplot(aes(x=Trip_Day, color = Rider_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Rider_Type %in% c('casual','member')) %>%
ggplot(aes(x=Trip_Day, color = Rider_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(janitor)
library(lubridate)
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
head(df)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual) %>%
rename(Start_Time = started_at) %>%
rename(End_Time = ended_at)
skim_without_charts(df_1)
df_2 <- df_1 %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id =
'Missing location ID')) %>%
replace_na(list(start_station_id = 'Missing location Name', end_station_id =
'Missing location Name'))
df_2 <-
mutate(df_2, Trip_Day = as_date(Start_Time))
#as.duration((df_2$Trip_Time_Days),"minutes") <-
df_2 <-
mutate(df_2, Trip_Time = seconds_to_period(as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time))) %>%
mutate(df_2, Trip_Time_seconds = as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time)) %>%
select(Ride_ID,Bike_Type,start_station_name,end_station_name,start_station_id,end_station_id,Rider_Type,Trip_Time, Trip_Time_seconds, Trip_Day)
paste(sum(df_2$Trip_Time < 0),"rows with trip times below 0 seconds have been removed.")
df_clean <- df_2[df_2$Trip_Time >= 0, ] #removes rows below 0 seconds
rm(df,df_1,df_2) #removes other dataframes to save memory
head(df_clean)
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) +
labs(title="Annual number of rides", x = "", y = "Rides")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_seconds), n= n()) %>%
ggplot(mapping = aes(x = Rider_Type, y = mean)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Mean ride times", x = "", y = "seconds")
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Time_seconds, color = Bike_Type)) +
geom_density() +
scale_x_continuous(limits=c(0, 10000)) +
labs(title = "Distribution of trip times",
x = "Trip times in seconds", y = "Number of rides") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Rider_Type %in% c('casual','member')) %>%
ggplot(aes(x=Trip_Day, color = Rider_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(janitor)
library(lubridate)
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
head(df)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual) %>%
rename(Start_Time = started_at) %>%
rename(End_Time = ended_at)
skim_without_charts(df_1)
df_2 <- df_1 %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id =
'Missing location ID')) %>%
replace_na(list(start_station_id = 'Missing location Name', end_station_id =
'Missing location Name'))
df_2 <-
mutate(df_2, Trip_Day = as_date(Start_Time))
#as.duration((df_2$Trip_Time_Days),"minutes") <-
df_2 <-
mutate(df_2, Trip_Time = seconds_to_period(as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time))) %>%
mutate(df_2, Trip_Time_seconds = as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time)) %>%
select(Ride_ID,Bike_Type,start_station_name,end_station_name,start_station_id,end_station_id,Rider_Type,Trip_Time, Trip_Time_seconds, Trip_Day)
paste(sum(df_2$Trip_Time < 0),"rows with trip times below 0 seconds have been removed.")
df_clean <- df_2[df_2$Trip_Time >= 0, ] #removes rows below 0 seconds
rm(df,df_1,df_2) #removes other dataframes to save memory
head(df_clean)
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) +
labs(title="Annual number of rides", x = "", y = "Rides")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_seconds), n= n()) %>%
ggplot(mapping = aes(x = Rider_Type, y = mean)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Mean ride times", x = "", y = "seconds")
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Time_seconds, color = Bike_Type)) +
geom_density() +
scale_x_continuous(limits=c(0, 10000)) +
labs(title = "Distribution of trip times",
x = "Trip times in seconds", y = "Number of rides") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Rider_Type %in% c('casual','member')) %>%
ggplot(aes(x=Trip_Day, color = Rider_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(janitor)
library(lubridate)
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
head(df)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual) %>%
rename(Start_Time = started_at) %>%
rename(End_Time = ended_at)
skim_without_charts(df_1)
df_2 <- df_1 %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id =
'Missing location ID')) %>%
replace_na(list(start_station_id = 'Missing location Name', end_station_id =
'Missing location Name'))
df_2 <-
mutate(df_2, Trip_Day = as_date(Start_Time))
#as.duration((df_2$Trip_Time_Days),"minutes") <-
df_2 <-
mutate(df_2, Trip_Time = seconds_to_period(as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time))) %>%
mutate(df_2, Trip_Time_seconds = as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time)) %>%
select(Ride_ID,Bike_Type,start_station_name,end_station_name,start_station_id,end_station_id,Rider_Type,Trip_Time, Trip_Time_seconds, Trip_Day)
paste(sum(df_2$Trip_Time < 0),"rows with trip times below 0 seconds have been removed.")
df_clean <- df_2[df_2$Trip_Time >= 0, ] #removes rows below 0 seconds
rm(df,df_1,df_2) #removes other dataframes to save memory
head(df_clean)
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) +
labs(title="Annual number of rides", x = "", y = "Rides")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_seconds), n= n()) %>%
ggplot(mapping = aes(x = Rider_Type, y = mean)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Mean ride times", x = "", y = "seconds")
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Time_seconds, color = Bike_Type)) +
geom_density() +
scale_x_continuous(limits=c(0, 10000)) +
labs(title = "Distribution of trip times",
x = "Trip times in seconds", y = "Number of rides") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Rider_Type %in% c('casual','member')) %>%
ggplot(aes(x=Trip_Day, color = Rider_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
