length(which(df_nocoordinates2$start_station_id == df_nocoordinates2$end_station_id))
df_clean %>%
filter(
Bike_Type %in%
c('classic_bike','docked_bike','electric_bike')
) %>%
ggplot(aes(x=Trip_Time_seconds, color = Bike_Type )) +
geom_density() +
scale_x_continuous(limits=c(0, 10000)) +
labs(
title = "Distribution of trip times",
x = "Trip times in seconds",
y = "Number of rides"
) +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
ggplot(aes(x=Trip_Day)) +
geom_density() +
```
df_clean %>%
ggplot(aes(x=Trip_Day)) +
geom_density()
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density()
df_clean %>%
filter(Rider_Type %in% c('caual','member')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density()
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density() +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
```{r}
df_clean %>%
filter(Rider_Type %in% c('caual','member')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density() +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density()
df_clean %>%
filter(Rider_Type %in% c('caual','member')) %>%
ggplot(aes(x=Trip_Day, color = Rider_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Rider_Type %in% c('casual','member')) %>%
ggplot(aes(x=Trip_Day, color = Rider_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(janitor)
library(lubridate)
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
head(df)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual) %>%
rename(Start_Time = started_at) %>%
rename(End_Time = ended_at)
skim_without_charts(df_1)
df_2 <- df_1 %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id =
'Missing location ID')) %>%
replace_na(list(start_station_id = 'Missing location Name', end_station_id =
'Missing location Name'))
df_2 <-
mutate(df_2, Trip_Day = as_date(Start_Time))
#as.duration((df_2$Trip_Time_Days),"minutes") <-
df_2 <-
mutate(df_2, Trip_Time = seconds_to_period(as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time))) %>%
mutate(df_2, Trip_Time_seconds = as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time)) %>%
select(Ride_ID,Bike_Type,start_station_name,end_station_name,start_station_id,end_station_id,Rider_Type,Trip_Time, Trip_Time_seconds, Trip_Day)
paste(sum(df_2$Trip_Time < 0),"rows with trip times below 0 seconds have been removed.")
df_clean <- df_2[df_2$Trip_Time >= 0, ] #removes rows below 0 seconds
rm(df,df_1,df_2) #removes other dataframes to save memory
head(df_clean)
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) +
labs(title="Annual number of rides", x = "", y = "Rides")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_seconds), n= n()) %>%
ggplot(mapping = aes(x = Rider_Type, y = mean)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Mean ride times", x = "", y = "seconds")
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Time_seconds, color = Bike_Type)) +
geom_density() +
scale_x_continuous(limits=c(0, 10000)) +
labs(title = "Distribution of trip times",
x = "Trip times in seconds", y = "Number of rides") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Rider_Type %in% c('casual','member')) %>%
ggplot(aes(x=Trip_Day, color = Rider_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(janitor)
library(lubridate)
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
head(df)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual) %>%
rename(Start_Time = started_at) %>%
rename(End_Time = ended_at)
skim_without_charts(df_1)
df_2 <- df_1 %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id =
'Missing location ID')) %>%
replace_na(list(start_station_id = 'Missing location Name', end_station_id =
'Missing location Name'))
df_2 <-
mutate(df_2, Trip_Day = as_date(Start_Time))
#as.duration((df_2$Trip_Time_Days),"minutes") <-
df_2 <-
mutate(df_2, Trip_Time = seconds_to_period(as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time))) %>%
mutate(df_2, Trip_Time_seconds = as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time)) %>%
select(Ride_ID,Bike_Type,start_station_name,end_station_name,start_station_id,end_station_id,Rider_Type,Trip_Time, Trip_Time_seconds, Trip_Day)
paste(sum(df_2$Trip_Time < 0),"rows with trip times below 0 seconds have been removed.")
df_clean <- df_2[df_2$Trip_Time >= 0, ] #removes rows below 0 seconds
rm(df,df_1,df_2) #removes other dataframes to save memory
head(df_clean)
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) +
labs(title="Annual number of rides", x = "", y = "Rides")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_seconds), n= n()) %>%
ggplot(mapping = aes(x = Rider_Type, y = mean)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Mean ride times", x = "", y = "seconds")
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Time_seconds, color = Bike_Type)) +
geom_density() +
scale_x_continuous(limits=c(0, 10000)) +
labs(title = "Distribution of trip times",
x = "Trip times in seconds", y = "Number of rides") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Rider_Type %in% c('casual','member')) %>%
ggplot(aes(x=Trip_Day, color = Rider_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(janitor)
library(lubridate)
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
head(df)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual) %>%
rename(Start_Time = started_at) %>%
rename(End_Time = ended_at)
skim_without_charts(df_1)
df_2 <- df_1 %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id =
'Missing location ID')) %>%
replace_na(list(start_station_id = 'Missing location Name', end_station_id =
'Missing location Name'))
df_2 <-
mutate(df_2, Trip_Day = as_date(Start_Time))
#as.duration((df_2$Trip_Time_Days),"minutes") <-
df_2 <-
mutate(df_2, Trip_Time = seconds_to_period(as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time))) %>%
mutate(df_2, Trip_Time_seconds = as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time)) %>%
select(Ride_ID,Bike_Type,start_station_name,end_station_name,start_station_id,end_station_id,Rider_Type,Trip_Time, Trip_Time_seconds, Trip_Day)
paste(sum(df_2$Trip_Time < 0),"rows with trip times below 0 seconds have been removed.")
df_clean <- df_2[df_2$Trip_Time >= 0, ] #removes rows below 0 seconds
rm(df,df_1,df_2) #removes other dataframes to save memory
head(df_clean)
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) +
labs(title="Annual number of rides", x = "", y = "Rides")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_seconds), n= n()) %>%
ggplot(mapping = aes(x = Rider_Type, y = mean)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Mean ride times", x = "", y = "seconds")
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Time_seconds, color = Bike_Type)) +
geom_density() +
scale_x_continuous(limits=c(0, 10000)) +
labs(title = "Distribution of trip times",
x = "Trip times in seconds", y = "Number of rides") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Rider_Type %in% c('casual','member')) %>%
ggplot(aes(x=Trip_Day, color = Rider_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(janitor)
library(lubridate)
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
head(df)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual) %>%
rename(Start_Time = started_at) %>%
rename(End_Time = ended_at)
skim_without_charts(df_1)
df_2 <- df_1 %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id =
'Missing location ID')) %>%
replace_na(list(start_station_id = 'Missing location Name', end_station_id =
'Missing location Name'))
df_2 <-
mutate(df_2, Trip_Day = as_date(Start_Time))
#as.duration((df_2$Trip_Time_Days),"minutes") <-
df_2 <-
mutate(df_2, Trip_Time = seconds_to_period(as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time))) %>%
mutate(df_2, Trip_Time_seconds = as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time)) %>%
select(Ride_ID,Bike_Type,start_station_name,end_station_name,start_station_id,end_station_id,Rider_Type,Trip_Time, Trip_Time_seconds, Trip_Day)
paste(sum(df_2$Trip_Time < 0),"rows with trip times below 0 seconds have been removed.")
df_clean <- df_2[df_2$Trip_Time >= 0, ] #removes rows below 0 seconds
rm(df,df_1,df_2) #removes other dataframes to save memory
head(df_clean)
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) +
labs(title="Annual number of rides", x = "", y = "Rides")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_seconds), n= n()) %>%
ggplot(mapping = aes(x = Rider_Type, y = mean)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Mean ride times", x = "", y = "seconds")
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Time_seconds, color = Bike_Type)) +
geom_density() +
scale_x_continuous(limits=c(0, 10000)) +
labs(title = "Distribution of trip times",
x = "Trip times in seconds", y = "Number of rides") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Rider_Type %in% c('casual','member')) %>%
ggplot(aes(x=Trip_Day, color = Rider_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(skimr)
library(janitor)
library(lubridate)
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
head(df)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual) %>%
rename(Start_Time = started_at) %>%
rename(End_Time = ended_at)
skim_without_charts(df_1)
df_2 <- df_1 %>%
replace_na(list(start_station_id = 'Missing location ID', end_station_id =
'Missing location ID')) %>%
replace_na(list(start_station_id = 'Missing location Name', end_station_id =
'Missing location Name'))
df_2 <-
mutate(df_2, Trip_Day = as_date(Start_Time))
#as.duration((df_2$Trip_Time_Days),"minutes") <-
df_2 <-
mutate(df_2, Trip_Time = seconds_to_period(as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time))) %>%
mutate(df_2, Trip_Time_seconds = as_datetime(df_2$End_Time)-
as_datetime(df_2$Start_Time)) %>%
select(Ride_ID,Bike_Type,start_station_name,end_station_name,start_station_id,end_station_id,Rider_Type,Trip_Time, Trip_Time_seconds, Trip_Day)
paste(sum(df_2$Trip_Time < 0),"rows with trip times below 0 seconds have been removed.")
df_clean <- df_2[df_2$Trip_Time >= 0, ] #removes rows below 0 seconds
rm(df,df_1,df_2) #removes other dataframes to save memory
head(df_clean)
ggplot() +
geom_bar(df_clean, mapping = aes(Rider_Type)) +
facet_wrap(~Bike_Type) +
labs(title="Annual number of rides", x = "", y = "Rides")
#percentage of riders using docked bikes
df_clean %>%
group_by(Rider_Type, Bike_Type) %>%
summarise(mean = mean(Trip_Time_seconds), n= n()) %>%
ggplot(mapping = aes(x = Rider_Type, y = mean)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Mean ride times", x = "", y = "seconds")
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Time_seconds, color = Bike_Type)) +
geom_density() +
scale_x_continuous(limits=c(0, 10000)) +
labs(title = "Distribution of trip times",
x = "Trip times in seconds", y = "Number of rides") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Bike_Type %in% c('classic_bike','docked_bike','electric_bike')) %>%
ggplot(aes(x=Trip_Day,color = Bike_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
df_clean %>%
filter(Rider_Type %in% c('casual','member')) %>%
ggplot(aes(x=Trip_Day, color = Rider_Type)) +
geom_density() +
labs(title = "Trips distribution per time of year",
x = "", y = "") +
theme(axis.text.y =element_blank(), axis.ticks.y=element_blank())
skim_without_charts(df_1)
# There are also missing observations for some of the columns in the head. Using
# a different function allows us to see more information about missing values and
# also unique values for each column.
skim_without_charts(df_1)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual) %>%
rename(Start_Time = started_at) %>%
rename(End_Time = ended_at)
df <- read_csv("202110-202209_AppendedData.csv", show_col_types = FALSE)
head(df)
df_1 <- df %>%
rename(Ride_ID = ride_id) %>%
rename(Bike_Type = rideable_type) %>%
rename(Rider_Type = member_casual) %>%
rename(Start_Time = started_at) %>%
rename(End_Time = ended_at)
# There are also missing observations for some of the columns in the head. Using
# a different function allows us to see more information about missing values and
# also unique values for each column.
skim_without_charts(df_1)
# There are also missing observations for some of the columns in the head. Using
# a different function allows us to see more information about missing values and
# also unique values for each column.
skim_without_charts(df_1) %>%
ggplot(mapping = aes(x = skim_variable, y = complete_rate)) +
geom_bar(stat= "identity") +
facet_wrap(~Bike_Type) +
labs(title="Mean ride times", x = "", y = "seconds")
# There are also missing observations for some of the columns in the head. Using
# a different function allows us to see more information about missing values and
# also unique values for each column.
skim_without_charts(df_1) %>%
ggplot(mapping = aes(x = skim_variable, y = complete_rate)) +
geom_bar(stat= "identity")
# There are also missing observations for some of the columns in the head. Using
# a different function allows us to see more information about missing values and
# also unique values for each column.
skim_without_charts(df_1) %>%
ggplot(mapping = aes(x = skim_variable, y = complete_rate)) +
geom_bar(stat= "identity", aes(y = class))
# There are also missing observations for some of the columns in the head. Using
# a different function allows us to see more information about missing values and
# also unique values for each column.
skim_without_charts(df_1) %>%
ggplot(mapping = aes(x = skim_variable, y = complete_rate)) +
geom_bar(stat= "identity") + aes(y = class)
# There are also missing observations for some of the columns in the head. Using
# a different function allows us to see more information about missing values and
# also unique values for each column.
skim_without_charts(df_1) %>%
ggplot(mapping = aes(x = skim_variable, y = complete_rate, y = class)) +
geom_bar(stat= "identity")
# There are also missing observations for some of the columns in the head. Using
# a different function allows us to see more information about missing values and
# also unique values for each column.
skim_without_charts(df_1) %>%
ggplot(mapping = aes(x = complete_rate, y = skim_variable)) +
geom_bar(stat= "identity")
# There are also missing observations for some of the columns in the head. Using
# a different function allows us to see more information about missing values and
# also unique values for each column.
skim_without_charts(df_1) %>%
ggplot(mapping = aes(x = complete_rate, y = skim_variable)) +
geom_bar(stat= "identity") +
labs(title="Completeness", x = "", y = "")
# There are also missing observations for some of the columns in the head. Using
# a different function allows us to see more information about missing values and
# also unique values for each column.
skim_without_charts(df_1) %>%
ggplot(mapping = aes(x = complete_rate, y = skim_variable)) +
geom_bar(stat= "identity") +
labs(title="Data completeness per column", x = "Share (0 to 1)", y = "")
# There are also missing observations for some of the columns in the head. Using
# a different function allows us to see more information about missing values and
# also unique values for each column.
df_skim <- skim_without_charts(df_1)
# There are also missing observations for some of the columns in the head. Using
# a different function allows us to see more information about missing values and
# also unique values for each column.
df_skim <- skim_without_charts(df_1)
```
df_skim %>%
ggplot(mapping = aes(x = complete_rate, y = skim_variable)) +
geom_bar(stat= "identity") +
labs(title="Data completeness per column", x = "Share (0 to 1)", y = "")
df_skim %>%
ggplot(mapping = aes(x = complete_rate, y = skim_variable)) +
geom_bar(stat= "identity") +
labs(title="Data completeness per column", x = "Share (0 to 1)", y = "")
df_skim
df_skim %>%
ggplot(mapping = aes(x = n_unique, y = skim_variable)) +
geom_bar(stat= "identity") +
labs(title="Unique IDs", x = "Share (0 to 1)", y = "")
# There are also missing observations for some of the columns in the head. Using
# a different function allows us to see more information about missing values and
# also unique values for each column.
df_skim <- skim_without_charts(df_1) %>%
df_skim
# There are also missing observations for some of the columns in the head. Using
# a different function allows us to see more information about missing values and
# also unique values for each column.
df_skim <- skim_without_charts(df_1) %>%
head(df_skim)
df_skim
df_skim %>%
ggplot(mapping = aes(x = n_unique, y = skim_variable)) +
geom_bar(stat= "identity") +
labs(title="Unique IDs", x = "Share (0 to 1)", y = "")
df_skim %>%
ggplot(mapping = aes(x = skim_variable, y = n_unique)) +
geom_bar(stat= "identity") +
labs(title="Unique IDs", x = "Share (0 to 1)", y = "")
